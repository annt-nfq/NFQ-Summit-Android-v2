import kotlin.Boolean;

CREATE TABLE Event (
    id TEXT PRIMARY KEY,
    created_at TEXT,
    title TEXT,
    description TEXT,
    event_start_time TEXT,
    event_end_time TEXT,
    event_type TEXT,
    cover_photo_url TEXT,
    location_name TEXT,
    is_conference INTEGER AS Boolean DEFAULT 0,
    ordering INTEGER,
    speaker_name TEXT,
    speaker_position TEXT,
    speaker_bio TEXT,
    icon TEXT,
    is_favorite INTEGER AS Boolean DEFAULT 0,
    tag TEXT
);

CREATE TABLE FavoriteEvent(
    id TEXT PRIMARY KEY
);

CREATE TABLE AttractionLocalModel (
    id INTEGER NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    icon TEXT NOT NULL
);

CREATE TABLE BlogLocalModel (
    id INTEGER NOT NULL PRIMARY KEY,
    title TEXT NOT NULL,
    description TEXT NOT NULL,
    icon_url TEXT NOT NULL,
    content_url TEXT NOT NULL,
    category TEXT NOT NULL,
    large_image_url TEXT,
    is_favorite INTEGER AS Boolean NOT NULL DEFAULT 0,
    is_recommended INTEGER AS Boolean NOT NULL DEFAULT 0,
    attraction_id INTEGER,
    FOREIGN KEY (attraction_id) REFERENCES AttractionLocalModel(id)
);

insertFavoriteEvent:
INSERT INTO FavoriteEvent (id) VALUES (?);

removeFavoriteEvent:
DELETE FROM FavoriteEvent WHERE id = ?;

getFavoriteEvent:
SELECT FavoriteEvent.* FROM FavoriteEvent WHERE id = ?;

getSavedEvents:
SELECT Event.* FROM Event WHERE is_favorite = 1;

markEventAsFavorite:
UPDATE Event SET is_favorite = ? WHERE id = ?;

insertEvent:
INSERT INTO Event (id, created_at, title, description, event_start_time, event_end_time, event_type, cover_photo_url, location_name, is_conference, ordering, speaker_name, speaker_position, speaker_bio, icon,is_favorite, tag)
VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

removeAllEvents:
DELETE FROM Event;

selectAllEvents:
SELECT Event.* FROM Event;

selectTechRocksEvents:
SELECT Event.* FROM Event WHERE is_conference = 1;

selectEvent:
SELECT Event.* FROM Event WHERE id = ?;

insertAttraction:
INSERT OR REPLACE INTO AttractionLocalModel (id, title, icon)
VALUES (?, ?, ?);

selectAllAttractions:
SELECT AttractionLocalModel.* FROM AttractionLocalModel;

selectAttraction:
SELECT AttractionLocalModel.* FROM  AttractionLocalModel WHERE id = ?;

clearAttractions:
DELETE FROM AttractionLocalModel;

insertBlog:
INSERT OR REPLACE INTO BlogLocalModel (id, title, description, icon_url, content_url, category, large_image_url, is_favorite, attraction_id, is_recommended)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?);

selectAllBlogs:
SELECT BlogLocalModel.* FROM BlogLocalModel;

selectBlog:
SELECT BlogLocalModel.* FROM BlogLocalModel WHERE id = ?;

selectBlogsByCategory:
SELECT BlogLocalModel.* FROM BlogLocalModel WHERE category = ?;

selectBlogsByAttraction:
SELECT BlogLocalModel.* FROM BlogLocalModel WHERE attraction_id = ?;

clearBlogs:
DELETE FROM BlogLocalModel;

markBlogAsFavorite:
UPDATE BlogLocalModel SET is_favorite = ? WHERE id = ?;

getFavoriteBlogs:
SELECT BlogLocalModel.* FROM BlogLocalModel WHERE is_favorite = 1;

getRecommendedBlogs:
SELECT BlogLocalModel.* FROM BlogLocalModel WHERE is_recommended = 1;
